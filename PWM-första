#define F_CPU 8000000UL
#define SETBIT(ADDR,BIT) (ADDR|=(1<<BIT))
#define CLEARBIT(ADDR,BIT) (ADDR &= ~(1<<BIT))

#include <avr/io.h>
#include <avr/interrupt.h>
#include <inttypes.h>
#include <util/delay.h>
#include <stdio.h>
#include <avr/sfr_defs.h>
#include <avr/pgmspace.h>

//Function declarations
void PWM_init1(void);

int main(void)
{
    sei();
	
	SETBIT(DDRD,2); // SET PORT to drive forward, CLEAR to drive backwards
	SETBIT(DDRD,3); // SET PORT to drive forward, CLEAR to drive backwards
	SETBIT(DDRD,4);
	SETBIT(DDRD,5);
	
	PWM_init1();
    while (1) 
    {	
		OCR1A = 0;
		OCR1B = 0;
		CLEARBIT(PORTD,3);
		CLEARBIT(PORTD,2);
		_delay_ms(200);
		SETBIT(PORTD,3);
		SETBIT(PORTD,2);
		OCR1A = 19999;
		OCR1B = 19999;
		_delay_ms(200);
		CLEARBIT(PORTD,3);
		CLEARBIT(PORTD,2);
		OCR1A = 59999;
		OCR1B = 59999;
		_delay_ms(200);
		
    }
}

void PWM_init1(void){
	// Clear OC1A on Compare Match / Set OC1A at Bottom, Wave Form Generator: Fast PWM 14, Top = ICR1
	TCCR1A = (1<<COM1A1) + (1<<COM1B1) + (1<<WGM11);
	TCCR1B = (1<<WGM13) + (1<<WGM12) + (1<<CS10); // prescaler = 0;
	ICR1 = 79999;
	//OCR1A = 0; // 15999/2 = 7999 => Duty cycle = 50%
	//OCR1B = 0; // 15999/4 = 3999 => Duty cycle = 25%
}
